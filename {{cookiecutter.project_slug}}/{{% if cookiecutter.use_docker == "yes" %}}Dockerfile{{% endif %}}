services:
  postgres_vc:
    image: pgvector/pgvector:pg15
    container_name: postgres_vc
    environment:
      POSTGRES_USER: {{ cookiecutter.project_slug }}
      POSTGRES_PASSWORD: {{ cookiecutter.project_db_password }} # Use a strong password
      POSTGRES_DB: {{ cookiecutter.project_slug }}
      POSTGRES_HOST_AUTH_METHOD: trust

    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

  {% if cookiecutter.database == "postgresql" %}
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  {% elif cookiecutter.database == "mysql" %}
  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: app
    ports:
      - "3306:3306"
    volumes:
      - mysqldata:/var/lib/mysql
  {% endif %}

  {% if cookiecutter.use_redis == "yes" %}
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
  {% endif %}

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # RabbitMQ main port
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
  {% if cookiecutter.database == "postgresql" %}
  pgdata:
  {% elif cookiecutter.database == "mysql" %}
  mysqldata:
  {% endif %}



  {% if cookiecutter.use_redis == "yes" %}
  redis_data:
  {% endif %}

networks:
  backend:
    driver: bridge


# docker run --name postgres \
#   -e POSTGRES_USER=document_ai \
#   -e POSTGRES_PASSWORD=#MyS3cr3tP@ssw0rd \
#   -e POSTGRES_DB=document_ai \
#   -p 5432:5432 \
#   -d postgres:15
